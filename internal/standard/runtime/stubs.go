package runtime

import (
	"reflect"
	"runtime"
)

var MSanRead = reflect.ValueOf(runtime.MSanRead)
var MSanWrite = reflect.ValueOf(runtime.MSanWrite)
var RaceRead = reflect.ValueOf(runtime.RaceRead)
var RaceDisable = reflect.ValueOf(runtime.RaceDisable)
var RaceEnable = reflect.ValueOf(runtime.RaceEnable)
var RaceReadRange = reflect.ValueOf(runtime.RaceReadRange)
var RaceReleaseMerge = reflect.ValueOf(runtime.RaceReleaseMerge)
var RaceErrors = reflect.ValueOf(runtime.RaceErrors)
var RaceWrite = reflect.ValueOf(runtime.RaceWrite)
var RaceAcquire = reflect.ValueOf(runtime.RaceAcquire)
var RaceRelease = reflect.ValueOf(runtime.RaceRelease)
var RaceWriteRange = reflect.ValueOf(runtime.RaceWriteRange)
var ReadMemStats = reflect.ValueOf(runtime.ReadMemStats)
var UnlockOSThread = reflect.ValueOf(runtime.UnlockOSThread)
var Gosched = reflect.ValueOf(runtime.Gosched)
var Breakpoint = reflect.ValueOf(runtime.Breakpoint)
var LockOSThread = reflect.ValueOf(runtime.LockOSThread)
var NumCgoCall = reflect.ValueOf(runtime.NumCgoCall)
var NumGoroutine = reflect.ValueOf(runtime.NumGoroutine)
var GOMAXPROCS = reflect.ValueOf(runtime.GOMAXPROCS)
var NumCPU = reflect.ValueOf(runtime.NumCPU)
var Goexit = reflect.ValueOf(runtime.Goexit)
var CallersFrames = reflect.ValueOf(runtime.CallersFrames)
var FuncForPC = reflect.ValueOf(runtime.FuncForPC)
var SetFinalizer = reflect.ValueOf(runtime.SetFinalizer)
var KeepAlive = reflect.ValueOf(runtime.KeepAlive)
var CPUProfile = reflect.ValueOf(runtime.CPUProfile)
var SetCPUProfileRate = reflect.ValueOf(runtime.SetCPUProfileRate)
var ReadTrace = reflect.ValueOf(runtime.ReadTrace)
var StartTrace = reflect.ValueOf(runtime.StartTrace)
var StopTrace = reflect.ValueOf(runtime.StopTrace)
var GC = reflect.ValueOf(runtime.GC)
var SetCgoTraceback = reflect.ValueOf(runtime.SetCgoTraceback)
var Caller = reflect.ValueOf(runtime.Caller)
var Callers = reflect.ValueOf(runtime.Callers)
var GOROOT = reflect.ValueOf(runtime.GOROOT)
var Version = reflect.ValueOf(runtime.Version)
var GoroutineProfile = reflect.ValueOf(runtime.GoroutineProfile)
var SetBlockProfileRate = reflect.ValueOf(runtime.SetBlockProfileRate)
var Stack = reflect.ValueOf(runtime.Stack)
var MutexProfile = reflect.ValueOf(runtime.MutexProfile)
var ThreadCreateProfile = reflect.ValueOf(runtime.ThreadCreateProfile)
var SetMutexProfileFraction = reflect.ValueOf(runtime.SetMutexProfileFraction)
var MemProfile = reflect.ValueOf(runtime.MemProfile)
var BlockProfile = reflect.ValueOf(runtime.BlockProfile)
