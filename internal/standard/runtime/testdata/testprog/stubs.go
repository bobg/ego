package testprog

import (
	"reflect"
	"runtime/testdata/testprog"
)

var RaiseException = reflect.ValueOf(testprog.RaiseException)
var ZeroDivisionException = reflect.ValueOf(testprog.ZeroDivisionException)
var NumGoroutine = reflect.ValueOf(testprog.NumGoroutine)
var Crash = reflect.ValueOf(testprog.Crash)
var FreeBSDNumCPUHelper = reflect.ValueOf(testprog.FreeBSDNumCPUHelper)
var FreeBSDNumCPU = reflect.ValueOf(testprog.FreeBSDNumCPU)
var MemProf = reflect.ValueOf(testprog.MemProf)
var RecursivePanic = reflect.ValueOf(testprog.RecursivePanic)
var NoHelperGoroutines = reflect.ValueOf(testprog.NoHelperGoroutines)
var Breakpoint = reflect.ValueOf(testprog.Breakpoint)
var PanicAfterGoexit = reflect.ValueOf(testprog.PanicAfterGoexit)
var RecoveredPanicAfterGoexit = reflect.ValueOf(testprog.RecoveredPanicAfterGoexit)
var PanicTraceback = reflect.ValueOf(testprog.PanicTraceback)
var PanicLoop = reflect.ValueOf(testprog.PanicLoop)
var LockedDeadlock = reflect.ValueOf(testprog.LockedDeadlock)
var ThreadExhaustion = reflect.ValueOf(testprog.ThreadExhaustion)
var GoNil = reflect.ValueOf(testprog.GoNil)
var SyscallInPanic = reflect.ValueOf(testprog.SyscallInPanic)
var SimpleDeadlock = reflect.ValueOf(testprog.SimpleDeadlock)
var MainGoroutineID = reflect.ValueOf(testprog.MainGoroutineID)
var InitDeadlock = reflect.ValueOf(testprog.InitDeadlock)
var LockedDeadlock2 = reflect.ValueOf(testprog.LockedDeadlock2)
var GoexitDeadlock = reflect.ValueOf(testprog.GoexitDeadlock)
var StackOverflow = reflect.ValueOf(testprog.StackOverflow)
var GoexitExit = reflect.ValueOf(testprog.GoexitExit)
var GoexitInPanic = reflect.ValueOf(testprog.GoexitInPanic)
var GoschedInPanic = reflect.ValueOf(testprog.GoschedInPanic)
var SignalExitStatus = reflect.ValueOf(testprog.SignalExitStatus)
var GCSys = reflect.ValueOf(testprog.GCSys)
var GCFairness = reflect.ValueOf(testprog.GCFairness)
var GCFairness2 = reflect.ValueOf(testprog.GCFairness2)
var PanicRace = reflect.ValueOf(testprog.PanicRace)
