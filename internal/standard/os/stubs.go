package os

import (
	"os"
	"reflect"
)

var Executable = reflect.ValueOf(os.Executable)
var MkdirAll = reflect.ValueOf(os.MkdirAll)
var RemoveAll = reflect.ValueOf(os.RemoveAll)
var Stat = reflect.ValueOf(os.Stat)
var Lstat = reflect.ValueOf(os.Lstat)
var Lstat = reflect.ValueOf(os.Lstat)
var Stat = reflect.ValueOf(os.Stat)
var Pipe = reflect.ValueOf(os.Pipe)
var IsPathSeparator = reflect.ValueOf(os.IsPathSeparator)
var Stat = reflect.ValueOf(os.Stat)
var Lstat = reflect.ValueOf(os.Lstat)
var NewSyscallError = reflect.ValueOf(os.NewSyscallError)
var IsExist = reflect.ValueOf(os.IsExist)
var IsPermission = reflect.ValueOf(os.IsPermission)
var IsNotExist = reflect.ValueOf(os.IsNotExist)
var Readlink = reflect.ValueOf(os.Readlink)
var Chown = reflect.ValueOf(os.Chown)
var Lchown = reflect.ValueOf(os.Lchown)
var Chtimes = reflect.ValueOf(os.Chtimes)
var ExpandEnv = reflect.ValueOf(os.ExpandEnv)
var Getenv = reflect.ValueOf(os.Getenv)
var Setenv = reflect.ValueOf(os.Setenv)
var Unsetenv = reflect.ValueOf(os.Unsetenv)
var Clearenv = reflect.ValueOf(os.Clearenv)
var Expand = reflect.ValueOf(os.Expand)
var LookupEnv = reflect.ValueOf(os.LookupEnv)
var Environ = reflect.ValueOf(os.Environ)
var SameFile = reflect.ValueOf(os.SameFile)
var Getpagesize = reflect.ValueOf(os.Getpagesize)
var NewFile = reflect.ValueOf(os.NewFile)
var Remove = reflect.ValueOf(os.Remove)
var Pipe = reflect.ValueOf(os.Pipe)
var Readlink = reflect.ValueOf(os.Readlink)
var Link = reflect.ValueOf(os.Link)
var OpenFile = reflect.ValueOf(os.OpenFile)
var Truncate = reflect.ValueOf(os.Truncate)
var Symlink = reflect.ValueOf(os.Symlink)
var Lchown = reflect.ValueOf(os.Lchown)
var Chtimes = reflect.ValueOf(os.Chtimes)
var Chown = reflect.ValueOf(os.Chown)
var Rename = reflect.ValueOf(os.Rename)
var Open = reflect.ValueOf(os.Open)
var Chdir = reflect.ValueOf(os.Chdir)
var Chmod = reflect.ValueOf(os.Chmod)
var TempDir = reflect.ValueOf(os.TempDir)
var Mkdir = reflect.ValueOf(os.Mkdir)
var Create = reflect.ValueOf(os.Create)
var Hostname = reflect.ValueOf(os.Hostname)
var NewFile = reflect.ValueOf(os.NewFile)
var Link = reflect.ValueOf(os.Link)
var OpenFile = reflect.ValueOf(os.OpenFile)
var Truncate = reflect.ValueOf(os.Truncate)
var Remove = reflect.ValueOf(os.Remove)
var Symlink = reflect.ValueOf(os.Symlink)
var Getpid = reflect.ValueOf(os.Getpid)
var Getppid = reflect.ValueOf(os.Getppid)
var FindProcess = reflect.ValueOf(os.FindProcess)
var StartProcess = reflect.ValueOf(os.StartProcess)
var IsPathSeparator = reflect.ValueOf(os.IsPathSeparator)
var Remove = reflect.ValueOf(os.Remove)
var Pipe = reflect.ValueOf(os.Pipe)
var Link = reflect.ValueOf(os.Link)
var OpenFile = reflect.ValueOf(os.OpenFile)
var Truncate = reflect.ValueOf(os.Truncate)
var Symlink = reflect.ValueOf(os.Symlink)
var NewFile = reflect.ValueOf(os.NewFile)
var IsPathSeparator = reflect.ValueOf(os.IsPathSeparator)
var Pipe = reflect.ValueOf(os.Pipe)
var Getuid = reflect.ValueOf(os.Getuid)
var Getegid = reflect.ValueOf(os.Getegid)
var Getgid = reflect.ValueOf(os.Getgid)
var Getgroups = reflect.ValueOf(os.Getgroups)
var Exit = reflect.ValueOf(os.Exit)
var Geteuid = reflect.ValueOf(os.Geteuid)
var Pipe = reflect.ValueOf(os.Pipe)
var Getwd = reflect.ValueOf(os.Getwd)
